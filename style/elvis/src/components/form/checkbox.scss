@import "../../utilities/colors.scss";
@import "../../utilities/outline.scss";
@import "../../variables/animation.scss";

$checkbox-mark-size: 1.5rem;
$checkbox-mark-border-radius: 4px;
$checkbox-mark-border: 1px solid color("black");

.e-checkbox {
  //   // Variable containing '&' to jump to current parent inside a child class.
  $this: &;

  display: flex;
  align-items: center;
  width: fit-content;
  box-sizing: border-box;
  cursor: pointer;
  &:not(:last-child) {
    margin-bottom: 0.75rem;
  }

  // pseudo classes to emulate state.
  &.e-checked {
    #{$this}_mark {
      @extend %checkbox-mark;
    }
  }

  &.e-focus {
    #{$this}_mark {
      @extend .e-outline;
    }
  }

  &.e-hover:not(.disabled):not(.invalid) {
    #{$this}_mark {
      background-color: color("green");
    }
  }

  &.e-disabled {
    #{$this}_mark {
      border-color: color("grey-30");
    }
  }

  &.e-invalid {
    #{$this}_mark {
      border-color: color("red");
    }
  }

  // hides initial checkbox and gives placeholder style according to state
  input {
    opacity: 0;

    &:checked ~ #{$this}_mark {
      @extend %checkbox-mark;
    }

    &:focus:not(:active) ~ #{$this}_mark {
      @extend .e-outline;
    }

    &:hover:not(:disabled):not(:invalid) ~ #{$this}_mark {
      background-color: color("green");
    }

    &:disabled ~ #{$this}_mark {
      border-color: color("grey-30");
    }

    &:invalid ~ #{$this}_mark {
      border-color: color("red");
    }
  }

  // Creating a placeholder to inject a checkbox mark into the checkbox
  // :before & :after each create a line which we put together to a checkmark.
  // Position properties top,left,right and bottom positions the lines to look like a checkmark.
  %checkbox-mark {
    position: relative;
    background-color: color("green");

    &::before {
      position: absolute;
      top: 50%;
      left: -2%;
      height: 30%;
      width: 2px;
      background-color: color("black");
      border-radius: 15px;
      content: "";
      transform: translateX(10px) rotate(-45deg);
      transform-origin: left bottom;
    }

    &::after {
      position: absolute;
      bottom: 20%;
      left: 2%;
      height: 2px;
      width: 60%;
      background-color: color("black");
      content: "";
      border-radius: 15px;
      transform: translateX(10px) rotate(-55deg);
      transform-origin: left bottom;
    }
  }

  &_mark {
    display: inline-block;

    min-width: $checkbox-mark-size;
    min-height: $checkbox-mark-size;
    max-width: $checkbox-mark-size;
    max-height: $checkbox-mark-size;
    transition: background 0.2s $transition-cubic;
    border: $checkbox-mark-border;
    border-radius: $checkbox-mark-border-radius;
    background: color("white");
  }

  &_label {
    font-size: inherit;
    margin-left: 1rem;
  }
}
