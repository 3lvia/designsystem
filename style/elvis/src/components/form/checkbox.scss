@import "../../variables/colors.scss";
@import "../../variables/animation.scss";

$checkbox-mark-size: 1.5rem;
$checkbox-mark-border-radius: 4px;
$checkbox-mark-border: 1px solid color("black");

.e-checkbox {
  //   // Variable containing '&' to jump to current parent inside a child class.
  $this: &;
  display: flex;
  align-items: center;
  cursor: pointer;
  &:not(:last-child) {
    margin-bottom: 0.75rem;
  }

  //   // Need to hide the original checkbox
  input {
    opacity: 0;

    &:checked ~ #{$this}_mark {
      @extend %checkbox-mark;
    }

    &:focus ~ #{$this}_mark {
      box-shadow: 0px 0px 0px 1px color("green-lime");
    }
  }

  //   // Creating placeholder to inject style into checkbox mutations.
  //   // We have to seperate the checkbox marked styling because of the checked state

  %checkbox-mark {
    position: relative;
    background-color: color("green-lime");

    &::before {
      position: absolute;
      // left: -30%;
      top: 50%;
      height: 40%;
      width: 2px;
      background-color: color("black");
      border-radius: 15px;
      content: "";
      transform: translateX(10px) rotate(-45deg);
      transform-origin: left bottom;
      font-size: 0.75rem;
    }

    &::after {
      position: absolute;
      left: -30%;
      bottom: 0;
      height: 2px;
      width: 70%;
      background-color: color("black");
      content: "";
      border-radius: 15px;
      transform: translateX(10px) rotate(-45deg);
      transform-origin: left bottom;
    }
  }

  &.is-checked {
    #{$this}_mark {
      @extend %checkbox-mark;
    }
  }

  &.is-invalid {
    input:checked ~ #{$this}_mark,
    #{$this}_mark {
      border-color: color("red");

      &::before {
        color: color("red");
      }
    }
  }

  .e-badge {
    margin-left: 0.5rem;
    float: right;
  }

  &_mark {
    display: inline-block;

    min-width: $checkbox-mark-size;
    min-height: $checkbox-mark-size;
    max-width: $checkbox-mark-size;
    max-height: $checkbox-mark-size;
    transition: background 0.3s $transition-cubic;
    border: $checkbox-mark-border;
    border-radius: $checkbox-mark-border-radius;
    background: color("white");
  }

  &_label {
    margin-left: 1rem;
  }
}
