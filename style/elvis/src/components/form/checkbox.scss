@import '../../variables/colors.scss';
@import '../../variables/animation.scss';

$form-checkbox-mark-size: 1rem;
$form-checkbox-mark-border-radius: 4px;
$form-checkbox-mark-border: 1px solid color('black');

.e-form_checkbox {
  // Variable containing '&' to jump to current parent inside a child class.
  $this: &;

  display: flex;
  align-items: center;
  cursor: pointer;
  &:not(:last-child) {
    margin-bottom: 0.75rem;
  }

  // Creating placeholder to inject style into checkbox mutations.
  // We have to seperate the checkbox marked styling because of the checked state

  %check-icon {
    position: relative;
    display: inline-block;
    width: 30px;
    height: 30px;

    &:before {
      position: absolute;
      left: 0;
      top: 50%;
      height: 50%;
      width: 3px;
      background-color: #336699;
      content: "";
      transform: translateX(10px) rotate(-45deg);
      transform-origin: left bottom;
    }

    &:after {
      position: absolute;
      left: 0;
      bottom: 0;
      height: 3px;
      width: 100%;
      background-color: #336699;
      content: "";
      transform: translateX(10px) rotate(-45deg);
      transform-origin: left bottom;
    }
  }

  %checkbox-mark {
    position: relative;
    background-color: color('green-lime');
   
    &::after {
      position: absolute;
      left: -30%;
      bottom: 0;
      height: 2px;
      width: 100%;
      background-color: color('black');
      content: "";
      transform: translateX(10px) rotate(-45deg);
      transform-origin: left bottom;
    }

    &::before {
      position: absolute;
      left: -30%;
      top: 50%;
      height: 50%;
      width: 2px;
      background-color: color('black');
      content: "";
      transform: translateX(10px) rotate(-45deg);
      transform-origin: left bottom;
      
      // top: -1px;
      // left: 50%;
      // transform: translateX(-50%);

      // color: color('white');
      font-size: 0.75rem;
    }
  }

  &.is-checked {
    #{$this}_mark {
      @extend %checkbox-mark;
    }
  }

  &.is-invalid {
    input:checked ~ #{$this}_mark,
    #{$this}_mark {
      border-color: color('red');

      &::before {
        color: color('red');
      }
    }
  }

  // Need to hide the original checkbox
  input {
    display: none;

    &:checked ~ #{$this}_mark {
      @extend %checkbox-mark;
    }
  }

  .e-badge {
    margin-left: 0.5rem;
    float: right;
  }

  &_mark {
    display: inline-block;

    min-width: $form-checkbox-mark-size;
    min-height: $form-checkbox-mark-size;
    max-width: $form-checkbox-mark-size;
    max-height: $form-checkbox-mark-size;
    transition: background 0.3s $transition-cubic;
    border: $form-checkbox-mark-border;
    border-radius: $form-checkbox-mark-border-radius;
    background: color('white');
  }

  &_label {
    flex-grow: 1;
    margin-left: 1rem;
  }
}
