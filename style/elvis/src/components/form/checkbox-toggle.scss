@import '../../variables/colors.scss';
@import '../../utilities/outline.scss';

$toggle-border-radius: 50px;

$toggle-desktop-height: 14px;
$toggle-desktop-width: 30px;
$toggle-desktop-slider-size: 8px;
$toggle-desktop-slider-padding: calc((#{$toggle-desktop-height} - #{$toggle-desktop-slider-size})/2);

$toggle-mobile-height: 18px;
$toggle-mobile-width: 42px;
$toggle-mobile-slider-size: 10px;
$toggle-mobile-slider-padding: 4.15px;

.e-toggle {
  position: relative;
  display: inline-block;
  height: $toggle-desktop-height;
  width: $toggle-desktop-width;
  background-color: color('black');
  border-radius: $toggle-border-radius;
  cursor: pointer;
  box-sizing: border-box;

  @include breakpoint-up(Mobile) {
    height: $toggle-mobile-height;
    width: $toggle-mobile-width;
  }

  // hide initial input
  & input { 
    opacity: 0;
    width: 0;
    height: 0;
  }

  &__slider {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    transition: 0.15s;
    border-radius: $toggle-border-radius;  
  }
  &__slider::before {
    position: absolute;
    content: "";
    height: $toggle-desktop-slider-size;
    width: $toggle-desktop-slider-size;
    left: $toggle-desktop-slider-padding;
    bottom: $toggle-desktop-slider-padding;
    background-color: color('white');
    transition: 0.1s;
    border-radius: 50%;

    @include breakpoint-up(Mobile) {
      height: $toggle-mobile-slider-size;
      width: $toggle-mobile-slider-size;
      left: $toggle-mobile-slider-padding;
      bottom: $toggle-mobile-slider-padding;
    }
  }

  input:checked + .e-toggle__slider {
    background-color: color('black');
  }

  input:checked + .e-toggle__slider::before {
    background-color: color('green');
    $transX: calc(#{$toggle-desktop-width} - (#{$toggle-desktop-slider-padding} * 2) - #{$toggle-desktop-slider-size});
    @include transform(translateX(#{$transX}));

    @include breakpoint-up(Mobile) {
      $transX: calc(#{$toggle-mobile-width} - (#{$toggle-mobile-slider-padding} * 2) - #{$toggle-mobile-slider-size});
      @include transform(translateX(#{$transX}));
    }
  }

  input:focus:not(:active) + .e-slider {
    @extend .e-outline;
  }
}
