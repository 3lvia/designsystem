@use '../../variables/animation';
@use '../../variables/typography';
@use '../../utilities/outline';
@use '../../utilities/helpers';

$checkbox-mark-size: 24px;
$checkbox-mark-size-small: 16px;
$checkbox-mark-border-radius: 3px;
$checkbox-mark-color: var(--e-color-static-black);
$checkbox-mark-border: 1px solid var(--e-color-border-1);
$checkbox-mark-border-checked: 1px solid var(--e-checkbox-border-checked-color);

.e-checkbox {
  @include helpers.custom-light-theme-tokens {
    --e-checkbox-border-checked-color: var(--e-light-theme-black);
  }

  @include helpers.custom-dark-theme-tokens('checkbox') {
    --e-checkbox-border-checked-color: transparent;
  }

  display: flex;
  width: fit-content;
  box-sizing: border-box;
  align-items: center;
  cursor: pointer;
  text-align: left;

  &:not(:last-child) {
    margin-bottom: 12px;
  }

  &__mark {
    display: inline-flex;
    min-width: $checkbox-mark-size;
    max-width: $checkbox-mark-size;
    min-height: $checkbox-mark-size;
    max-height: $checkbox-mark-size;
    align-self: flex-start;
    border: $checkbox-mark-border;
    border-radius: $checkbox-mark-border-radius;
    background-color: var(--e-color-background-element-1);
    transition: background-color, border, 0.3s animation.$transition-cubic;
  }

  &__label {
    width: fit-content;
    margin-left: 8px;
    color: var(--e-color-text-1);
    @include typography.typography('text-option');
    line-height: 24px;
  }

  // Hides initial checkbox
  input {
    position: absolute;
    z-index: -1;
    width: $checkbox-mark-size;
    height: $checkbox-mark-size;
    border-radius: 50%;
    margin: 0;
    opacity: 0;
  }

  // States
  input:checked ~ .e-checkbox__mark,
  &.e-checkbox---checked .e-checkbox__mark {
    @extend %checkbox-mark-checked;
  }

  input:focus ~ .e-checkbox__mark {
    @include outline.e-outline();
  }

  &.e-checkbox---focus .e-checkbox__mark {
    @include outline.e-outline-pseudoclass();
  }

  input {
    @include helpers.hover() {
      &:hover:not(:disabled):not(:invalid) ~ .e-checkbox__mark {
        background-color: var(--e-color-background-hover-1);
      }
    }
  }

  &.e-checkbox---hover:not(:disabled):not(:invalid) .e-checkbox__mark {
    background-color: var(--e-color-background-hover-1);
  }

  input:disabled,
  &.e-checkbox---disabled {
    @extend %checkbox-mark-disabled;
  }

  input:checked:disabled,
  &.e-checkbox---disabled-checked {
    ~ .e-checkbox__mark,
    .e-checkbox__mark {
      @extend %checkbox-mark-checked;
    }

    @extend %checkbox-mark-disabled;
  }

  input:invalid ~ .e-checkbox__mark,
  &.e-checkbox---invalid .e-checkbox__mark {
    @extend %checkbox-mark-invalid;
  }

  &.e-checkbox--indeterminate .e-checkbox__mark {
    @extend %checkbox-mark-indeterminate;
  }

  // Small
  // DEPRECATED (compact, sm) -> small
  &.e-checkbox--compact,
  &.e-checkbox--sm,
  &.e-checkbox--small {
    input,
    .e-checkbox__mark {
      min-width: $checkbox-mark-size-small;
      max-width: $checkbox-mark-size-small;
      min-height: $checkbox-mark-size-small;
      max-height: $checkbox-mark-size-small;
    }

    .e-checkbox__label {
      @include typography.typography('text-sm');
      color: var(--e-color-text-1);
      line-height: 16px;
    }

    // States - small specific
    input:checked ~ .e-checkbox__mark,
    &.e-checkbox---checked .e-checkbox__mark {
      @extend %checkbox-mark-checked-small;
    }

    input:checked:disabled,
    &.e-checkbox---disabled-checked {
      ~ .e-checkbox__mark,
      .e-checkbox__mark {
        @extend %checkbox-mark-checked-small;
      }

      @extend %checkbox-mark-disabled;
    }

    &.e-checkbox--indeterminate .e-checkbox__mark {
      @extend %checkbox-mark-indeterminate-small;
    }
  }
}

// Checkbox mark styling
// :before & :after each create a line which we put together to a checkmark.
%checkbox-mark-checked,
%checkbox-mark-checked-small,
%checkbox-mark-indeterminate,
%checkbox-mark-indeterminate-small {
  position: relative;
  border: $checkbox-mark-border-checked;
  background-color: var(--e-color-background-selected-1);

  &::before,
  &::after {
    @include helpers.transform-origin(left bottom);
    position: absolute;
    border-radius: 15px;
    background-color: $checkbox-mark-color;
    content: '';
  }
}
%checkbox-mark-checked {
  &::before {
    @include helpers.transform(translateX(10px) rotate(-45deg));
    top: 12px;
    left: -2px;
    width: 2px;
    height: 30%;
    animation: checkmarkHeight 150ms;
  }

  &::after {
    @include helpers.transform(translateX(10px) rotate(-55deg));
    bottom: 3px;
    left: -1px;
    width: 0%;
    height: 2px;
    animation: checkmarkWidth 150ms 150ms forwards;
  }
}
%checkbox-mark-checked-small {
  &::before {
    @include helpers.transform(translateX(10px) rotate(-45deg));
    top: 50%;
    left: -28%;
    width: 1px;
    height: 39%;
    animation: checkmarkHeightSmall 150ms;
  }

  &::after {
    @include helpers.transform(translateX(10px) rotate(-55deg));
    bottom: 15%;
    left: -28%;
    width: 0%;
    height: 1px;
    animation: checkmarkWidthSmall 150ms 150ms forwards;
  }
}
%checkbox-mark-disabled {
  cursor: not-allowed;

  ~ .e-checkbox__label,
  .e-checkbox__label {
    color: var(--e-color-text-disabled-1);
    cursor: not-allowed;
  }

  ~ .e-checkbox__mark,
  .e-checkbox__mark {
    border-color: var(--e-color-border-disabled-1);
    background-color: var(--e-color-background-disabled-1);
    cursor: not-allowed;

    &::after,
    &::before {
      background-color: var(--e-color-text-disabled-1);
    }
  }
}
%checkbox-mark-invalid {
  border-color: var(--e-color-signal-danger);
}
%checkbox-mark-indeterminate {
  &::before {
    top: calc(50% - 1px);
    left: calc(50% - 6px);
    width: 12px;
    height: 2px;
    border-radius: 1px;
  }
}
%checkbox-mark-indeterminate-small {
  &::before {
    top: calc(50%);
    left: calc(50% - 4px);
    width: 8px;
    height: 1px;
  }
}

// Animations
@include helpers.keyframes(checkmarkHeight) {
  0% {
    left: -31%;
    height: 0%;
  }

  100% {
    left: -9%;
    height: 30%;
  }
}

@include helpers.keyframes(checkmarkWidth) {
  0% {
    width: 0%;
  }

  100% {
    width: 83%;
  }
}

@include helpers.keyframes(checkmarkHeightSmall) {
  0% {
    left: -55%;
    height: 0%;
  }

  100% {
    left: -28%;
    height: 39%;
  }
}

@include helpers.keyframes(checkmarkWidthSmall) {
  0% {
    width: 0%;
  }

  100% {
    width: 80%;
  }
}
