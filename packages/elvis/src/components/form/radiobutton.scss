@use '../../variables/colors';
@use '../../variables/typography';
@use '../../utilities/outline';
@use '../../utilities/helpers';

$form-radiobutton-mark-size: 24px;
$form-radiobutton-compact-mark-size: 16px;
$form-radiobutton-mark-border-radius: 14px;
$form-radiobutton-mark-border: 1px solid colors.color('elvia-off');

.e-radio {
  // Variable containing '&' to jump to current parent inside a child class.
  $this: &;
  position: relative;
  display: flex;
  width: fit-content;
  box-sizing: border-box;
  align-items: center;
  color: colors.color('font-color');
  cursor: pointer;
  font-family: 'Red Hat Text', Verdana, sans-serif;
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: 24px;
  text-align: left;

  @include helpers.keyframes(fadeIn) {
    0% {
      opacity: 0;
    }

    100% {
      opacity: 1;
    }
  }

  &:not(:last-child) {
    margin-bottom: 8px;
  }

  &.e-radio--compact,
  &.e-radio--sm,
  &.e-radio--small {
    @include typography.typography('text-sm');
    color: colors.color('font-color');

    &:not(:last-child) {
      margin-bottom: 0;
    }

    input {
      position: absolute;
      z-index: -1;
      width: $form-radiobutton-compact-mark-size;
      height: $form-radiobutton-compact-mark-size;
      opacity: 0;
      outline: none;

      // states styles for input
      &:checked ~ #{$this}__mark {
        @extend %radiobutton-mark--compact;
        border-color: colors.color('elvia-off');
      }

      &:focus ~ #{$this}__mark {
        @include outline.e-outline();
      }

      &:invalid ~ #{$this}__mark {
        border-color: colors.color('red');
      }

      &:disabled ~ #{$this}__mark {
        border-color: colors.color('disabled');
        background: colors.color('disabled-light');
        cursor: not-allowed;
      }
      &:disabled ~ #{$this}__label {
        color: colors.color('grey-70');
        cursor: not-allowed;
      }

      &:disabled:checked ~ #{$this}__mark {
        border-color: colors.color('disabled');
        background: colors.color('disabled-light');
        cursor: not-allowed;

        &::before,
        &::after {
          background-color: colors.color('grey-40');
        }
      }
      &:disabled:checked ~ #{$this}__label {
        color: colors.color('grey-70');
        cursor: not-allowed;
      }
    }

    .e-radio__mark {
      top: 3px;
      width: $form-radiobutton-compact-mark-size;
      height: $form-radiobutton-compact-mark-size;
    }

    .e-radio__label {
      margin-left: 24px;
    }
  }

  &:hover &__mark {
    background: colors.color('elvia-charge');
  }

  // Hide default radiostyle and put in placeholder style
  input {
    position: absolute;
    z-index: -1;
    width: $form-radiobutton-mark-size;
    height: $form-radiobutton-mark-size;
    border-radius: 50%;
    margin: 0;
    opacity: 0;
    outline: none;

    // states styles for input
    &:checked ~ #{$this}__mark {
      @extend %radiobutton-mark;
      border-color: colors.color('elvia-off');
    }

    &:focus ~ #{$this}__mark {
      @include outline.e-outline();
    }

    &:invalid ~ #{$this}__mark {
      border-color: colors.color('red');
    }

    &:disabled ~ #{$this}__mark {
      border-color: colors.color('disabled');
      background: colors.color('disabled-light');
      cursor: not-allowed;
    }
    &:disabled ~ #{$this}__label {
      color: colors.color('grey-70');
      cursor: not-allowed;
    }

    &:disabled:checked ~ #{$this}__mark {
      border-color: colors.color('disabled');
      background: colors.color('disabled-light');
      cursor: not-allowed;

      &::before,
      &::after {
        background-color: colors.color('grey-40');
      }
    }
    &:disabled:checked ~ #{$this}__label {
      color: colors.color('grey-70');
      cursor: not-allowed;
    }
  }
  // Creating placeholder to inject style into radiobutton mutations.
  %radiobutton-mark,
  %radiobutton-mark--compact {
    display: grid;
    background-color: colors.color('elvia-charge');
    place-items: center;

    &::before {
      @include helpers.animation(fadeIn, 250ms, linear, both);
      border-radius: 50%;
      background-color: colors.color('elvia-off');
      content: '';
      opacity: 1;
    }
  }

  %radiobutton-mark {
    &::before {
      width: 12px;
      height: 12px;
    }
  }

  %radiobutton-mark--compact {
    &::before {
      width: 8px;
      height: 8px;
    }
  }

  &__mark {
    display: inline-block;
    width: $form-radiobutton-mark-size;
    height: $form-radiobutton-mark-size;
    border: $form-radiobutton-mark-border;
    border-radius: $form-radiobutton-mark-border-radius;
    background: colors.color('elvia-on');
  }

  // pseudoclasses

  &.e-radio---checked {
    .e-radio__mark {
      @extend %radiobutton-mark;
    }
  }
  // extends correct radiomark for compact radiobuttons
  &.e-radio--compact[class$='e-radio---checked'] &__mark,
  &.e-radio--sm[class$='e-radio---checked'] &__mark,
  &.e-radio--small[class$='e-radio---checked'] &__mark {
    @extend %radiobutton-mark--compact;
  }

  &.e-radio---disabled {
    .e-radio__mark {
      border-color: colors.color('disabled');
      background: colors.color('disabled-light');
      cursor: not-allowed;
    }

    .e-radio__label {
      color: colors.color('grey-70');
      cursor: not-allowed;
    }
  }

  &.e-radio---disabled-checked {
    .e-radio__mark {
      @extend %radiobutton-mark;
      border-color: colors.color('disabled') !important;
      background: colors.color('disabled-light') !important;
      cursor: not-allowed;

      &::before,
      &::after {
        background-color: colors.color('grey-40') !important;
      }
    }

    .e-radio__label {
      color: colors.color('grey-70');
      cursor: not-allowed;
    }
  }
  // extends correct radiomark for compact radiobuttons
  &.e-radio--compact[class$='e-radio---disabled-checked'] &__mark,
  &.e-radio--sm[class$='e-radio---disabled-checked'] &__mark,
  &.e-radio--small[class$='e-radio---disabled-checked'] &__mark {
    @extend %radiobutton-mark--compact;
  }

  &.e-radio---focus {
    .e-radio__mark {
      @include outline.e-outline-pseudoclass();
    }
  }

  &:active,
  &.e-radio---hover {
    .e-radio__mark {
      background: colors.color('elvia-charge');
    }
  }

  &.e-radio---invalid {
    .e-radio__mark {
      border-color: colors.color('red');
    }
  }

  &__mark {
    position: absolute;
    top: 0;
  }

  &__label {
    flex-grow: 1;
    margin-left: 32px;
  }
}
