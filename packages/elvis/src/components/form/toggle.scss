@use '../../utilities/helpers';
@use '../../utilities/outline';
@use '../../variables/colors';
@use '../../variables/typography.scss';

$toggle-border-radius: 50px;

$toggle-height: 16px;
$toggle-width: 32px;
$toggle-slider-size: 10px;
$toggle-slider-margin: calc((#{$toggle-height} - #{$toggle-slider-size}) / 2);

$toggle-inverted-height: 14px;
$toggle-inverted-width: 30px;
$toggle-inverted-slider-padding: calc((#{$toggle-inverted-height} - #{$toggle-slider-size} + 2px) / 2);

.e-toggle {
  // Label
  @include typography.typography('text-medium');
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: center;
  cursor: pointer;
  gap: 8px;

  // Larger touch-target
  &::after {
    position: absolute;
    top: -4px;
    left: -4px;
    width: calc(100% + 8px);
    height: calc(100% + 8px);
    content: '';
  }

  input[type='checkbox'] {
    appearance: none;
  }

  &__input {
    position: relative;
    width: $toggle-width;
    height: 16px;
    flex: none;
    border-radius: 50px;
    margin: 0;
    cursor: pointer;
    outline: none;

    // Background
    &::before {
      position: absolute;
      top: 0;
      left: 0;
      width: $toggle-width;
      height: $toggle-height;
      border-radius: $toggle-border-radius;
      background: colors.color('black');
      content: '';
      cursor: pointer;
    }

    // Switch
    &::after {
      position: absolute;
      top: $toggle-slider-margin;
      left: $toggle-slider-margin;
      width: $toggle-slider-size;
      height: $toggle-slider-size;
      border-radius: 50%;
      background: colors.color('white');
      content: '';
      cursor: pointer;
      transition: 0.1s;
    }
  }

  &.e-toggle--compact {
    // Compact Label
    @include typography.typography('text-small');
  }

  // Checked
  &.e-toggle---checked .e-toggle__input::after,
  input:checked.e-toggle__input::after {
    @include helpers.transform(translateX(16px));
    background: colors.color('elvia-charge');
  }

  // Focus
  &.e-toggle---focus input.e-toggle__input {
    outline: none;

    &::before {
      @include outline.e-outline-pseudoclass();
    }
  }

  input:focus-visible.e-toggle__input {
    outline: none;

    &::before {
      @include outline.e-outline();
    }
  }

  // Disabled
  &.e-toggle---disabled,
  input:disabled {
    cursor: not-allowed;

    &.e-toggle__input::before {
      background-color: colors.color('disabled');
      cursor: not-allowed;
    }

    &.e-toggle__input::after {
      background-color: colors.color('grey-10');
      cursor: not-allowed;
    }
  }

  // Inverted
  &.e-toggle--inverted {
    color: colors.color('font-color-light');

    .e-toggle__input::before {
      width: $toggle-inverted-width;
      height: $toggle-inverted-height;
      box-sizing: content-box;
      border: 1px solid colors.color('elvia-on');
    }

    .e-toggle__input::after {
      left: $toggle-inverted-slider-padding;
    }

    &.e-toggle---disabled,
    input:disabled {
      &.e-toggle__input::before {
        border: 1px solid colors.color('grey-70');
        background-color: colors.color('grey');
      }

      &.e-toggle__input::after {
        background-color: colors.color('grey-70');
      }
    }
  }
}
