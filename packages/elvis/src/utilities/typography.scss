@use 'sass:map';
@use './breakpoints.scss';
@use '@elvia/elvis-typography/dist/typographyMap.scss' as TypographyMap;
@use './mixins.scss';

@import url('https://fonts.googleapis.com/css2?family=Red+Hat+Display:ital,wght@0,400..900;1,500&family=Red+Hat+Mono&family=Red+Hat+Text:ital,wght@0,300..700;1,400..500&display=swap');

body {
  @include mixins.typography('text-md');
  color: var(--e-color-text-primary, #000);
}

@each $label, $map in TypographyMap.$typography {
  $family: map.get($map, family);
  $size: map.get($map, size);
  $size-m: map.get($map, size-m);
  $height: map.get($map, height);
  $height-m: map.get($map, height-m);
  $weight: map.get($map, weight);
  $color: map.get($map, color);
  $style: map.get($map, style);
  $letter-spacing: map.get($map, letter-spacing);
  $transform: map.get($map, transform);
  $align: map.get($map, align);

  $alt-labels: map.get($map, altLabels);
  $labels: ($label);

  @if $alt-labels {
    @each $label in $alt-labels {
      $labels: list.append($labels, $label);
    }
  }

  @each $label in $labels {
    .e-#{$label} {
      color: $color;
      font-family: $family;
      font-size: $size;
      font-style: $style;
      font-weight: $weight;
      letter-spacing: $letter-spacing;
      line-height: $height;
      text-align: $align;
      text-transform: $transform;
      @include breakpoints.breakpoint-up(Mobile) {
        font-size: $size-m;
        line-height: $height-m;
      }
    }
    @if (str-index($label, 'text-')) {
      .e-#{$label} {
        b,
        strong {
          font-weight: 500;
        }

        em,
        i {
          font-style: italic;
        }
      }
    }
  }
}

.e-uppercase {
  text-transform: uppercase !important;
}

.e-lowercase {
  text-transform: lowercase !important;
}

.e-capitalize {
  text-transform: capitalize !important;
}

.e-text-right {
  text-align: right !important;
}

.e-text-left {
  text-align: left !important;
}

.e-text-center {
  text-align: center !important;
}
