@use 'sass:map';
@use './breakpoints.scss';
@use '@elvia/elvis-typography/dist/typographyMap.scss' as TypographyMap;

$typography: TypographyMap.$typography;

@function getValue($name, $value) {
  $typography-map: null;

  @if map-has-key($typography, $name) {
    $typography-map: map-get($typography, $name);
  } @else {
    @each $label, $map in $typography {
      @if map-has-key($typography, alt-labels) {
        @if contains(map-get($map, alt-labels), $name) {
          $typography-map: $map;
        }
      }
    }
  }

  @if not $typography-map {
    @warn 'the typography variable "#{$name}" was not found';
    @return null;
  }

  @return map-get($typography-map, $value);
}

@mixin typography($name) {
  color: getValue($name, color);
  font-family: getValue($name, family);
  font-size: getValue($name, size);
  font-style: getValue($name, style);
  font-weight: getValue($name, weight);
  letter-spacing: getValue($name, letter-spacing);
  line-height: getValue($name, height);
  text-transform: getValue($name, transform);
  @include breakpoints.breakpoint-up(Mobile) {
    font-size: getValue($name, size-m);
    line-height: getValue($name, height-m);
  }
}

body {
  @include typography('text-md');
  color: var(--e-color-text-primary, #000);
}

@import url('https://fonts.googleapis.com/css?family=Red+Hat+Display:500,500i,700,900&display=swap');
@import url('https://fonts.googleapis.com/css?family=Red+Hat+Text:300,400,400i,500,500i,600,700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Red+Hat+Mono:wght@400&display=swap');

@each $label, $map in $typography {
  $family: map.get($map, family);
  $size: map.get($map, size);
  $size-m: map.get($map, size-m);
  $height: map.get($map, height);
  $height-m: map.get($map, height-m);
  $weight: map.get($map, weight);
  $color: map.get($map, color);
  $style: map.get($map, style);
  $letter-spacing: map.get($map, letter-spacing);
  $transform: map.get($map, transform);
  $align: map.get($map, align);

  $alt-labels: map.get($map, altLabels);
  $labels: ($label);

  @if $alt-labels {
    @each $label in $alt-labels {
      $labels: list.append($labels, $label);
    }
  }

  @each $label in $labels {
    .e-#{$label} {
      color: $color;
      font-family: $family;
      font-size: $size;
      font-style: $style;
      font-weight: $weight;
      letter-spacing: $letter-spacing;
      line-height: $height;
      text-align: $align;
      text-transform: $transform;
      @include breakpoints.breakpoint-up(Mobile) {
        font-size: $size-m;
        line-height: $height-m;
      }
    }
    @if (str-index($label, 'text-')) {
      .e-#{$label} {
        b,
        strong {
          font-weight: 500;
        }

        em,
        i {
          font-style: italic;
        }
      }
    }
  }
}

.e-uppercase {
  text-transform: uppercase !important;
}

.e-lowercase {
  text-transform: lowercase !important;
}

.e-capitalize {
  text-transform: capitalize !important;
}

.e-text-right {
  text-align: right !important;
}

.e-text-left {
  text-align: left !important;
}

.e-text-center {
  text-align: center !important;
}
