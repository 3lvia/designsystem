'use strict';

const fs = require('fs');
const gulp = require('gulp');
const prettier = require('gulp-prettier');
const header = require('gulp-header');
const del = require('del');
const typographies = require('./src/elviaTypography')['default'];

const WARNING = `// THIS FILE IS AUTOMATICALLY GENERATED AND WILL BE OVERWRITTEN.
// DO NOT MAKE CHANGES TO THIS FILE DIRECTLY.\n\n`;

const ScssPropertyEnum = {
  fontFamily: 'family',
  fontSize: 'size',
  fontSizeMobile: 'size-m',
  fontWeight: 'weight',
  lineHeight: 'height',
  lineHeightMobile: 'height-m',
  letterSpacing: 'letter-spacing',
  fontStyle: 'style',
  textTransform: 'transform',
  color: 'color',
};

const generateElvisTypographyMapScss = async () => {
  let content = `$typography: (\n`;
  const labels = {};

  for (const typography in typographies) {
    labels[typography] = typography;
    if (typographies[typography]['altLabels']) {
      for (const altLabelIndex in typographies[typography]['altLabels']) {
        const altLabel = typographies[typography]['altLabels'][altLabelIndex];
        labels[altLabel] = typography;
      }
    }
  }

  for (const label in labels) {
    content += `\t${label}: (\n`;
    for (const property in typographies[labels[label]]) {
      if (property !== 'altLabels') {
        content += `\t${ScssPropertyEnum[property]}: #\{${typographies[labels[label]][property]}\},\n`;
      }
    }
    content += `),\n`;
  }
  content += `);`;
  fs.writeFileSync('./dist/typographyMap.scss', content);
};

const copyElviaTypography = async () => {
  return gulp
    .src(['./src/elviaTypography.js', './src/elviaTypography.d.ts'])
    .pipe(header(WARNING))
    .pipe(gulp.dest('./dist/'));
};

const formatPrettier = async () => {
  return gulp.src(['./dist**/*']).pipe(prettier()).pipe(gulp.dest('.'));
};

function cleanup() {
  return del(['./dist/**/*'], { force: true });
}

const makeDistFolder = async () => {
  const dir = './dist';
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir);
  }
  return true;
};

gulp.task(
  'default',
  gulp.series(
    makeDistFolder,
    cleanup,
    generateElvisTypographyMapScss,
    copyElviaTypography,
    formatPrettier,
    function (done) {
      console.log('Elvis-typography - Successfully built Elvis-typography! ');
      done();
    },
  ),
);
