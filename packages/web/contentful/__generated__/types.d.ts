// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT.

import { Asset, Entry } from 'contentful';
import { Document } from '@contentful/rich-text-types';

export interface ICenteredContentFields {
  /** Title */
  title?: string | undefined;

  /** Content */
  content?: Document | undefined;
}

/** For centering content inside a section */

export interface ICenteredContent extends Entry<ICenteredContentFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'centeredContent';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IDocumentationPageFields {
  /** Title */
  title: string;

  /** isMainPage */
  isMainPage?: boolean | undefined;

  /** Figma url */
  figmaUrl?: string | undefined;

  /** Page Description */
  pageDescription?: Document | undefined;

  /** Content */
  content?: Document | undefined;

  /** path */
  path: string;
}

/** All documentation pages should use this model and then be added to the correct subMenu */

export interface IDocumentationPage extends Entry<IDocumentationPageFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'documentationPage';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IIconListFields {
  /** list */
  list?: Document | undefined;
}

export interface IIconList extends Entry<IIconListFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'iconList';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IImageFields {
  /** Name */
  name?: string | undefined;

  /** Size */
  size: 'original' | '25%' | '50%' | '75%' | '100%';

  /** Alignment */
  alignment?: 'left' | 'right' | 'center' | undefined;

  /** Image */
  image: Asset;

  /** Inline text */
  inlineText?: Document | undefined;
}

export interface IImage extends Entry<IImageFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'image';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IInternalLinkFields {
  /** Title */
  title: string;

  /** Url internal page */
  page?: IDocumentationPage | undefined;

  /** Url new tab */
  urlNewTab?: string | undefined;

  /** Size */
  size?: 'Large' | 'Medium' | 'Small' | undefined;

  /** Inline */
  inline?: boolean | undefined;

  /** New tab */
  newTab?: boolean | undefined;

  /** Action */
  action?: boolean | undefined;
}

/** Use for all links */

export interface IInternalLink extends Entry<IInternalLinkFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'internalLink';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ILandingPageFields {
  /** Title */
  title: string;

  /** Overview image */
  overviewImage?: Asset | undefined;

  /** Description */
  description?: string | undefined;
}

/** Landing page should be wrapped inside a documentationPage and then be placed inside the subMenu it belongs to */

export interface ILandingPage extends Entry<ILandingPageFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'landingPage';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ILandingPageWithCardsFields {
  /** Title */
  title: string;

  /** Overview card */
  overviewCard: IOverviewCard[];
}

/** Landing page should be wrapped inside a documentationPage and then be placed inside the subMenu it belongs to */

export interface ILandingPageWithCards extends Entry<ILandingPageWithCardsFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'landingPageWithCards';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ILocalizationStringsFields {}

/** A list of localized strings */

export interface ILocalizationStrings extends Entry<ILocalizationStringsFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'localizationStrings';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IMainMenuFields {
  /** Title */
  title?: string | undefined;

  /** Submenus */
  submenus?: ISubMenu[] | undefined;
}

/** The main menu, contains submenus */

export interface IMainMenu extends Entry<IMainMenuFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'mainMenu';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IOverviewCardFields {
  /** Page icon */
  pageIcon: Asset;

  /** Title */
  title: string;

  /** Page url */
  pageUrl: IDocumentationPage;
}

/** Cards for navigating to content from overview pages */

export interface IOverviewCard extends Entry<IOverviewCardFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'overviewCard';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ISectionFields {
  /** title */
  title: string;

  /** content */
  content: Document;
}

/** Section - should always be inside a documentationPage */

export interface ISection extends Entry<ISectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'section';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ISubMenuFields {
  /** landing-page */
  landingPage?: IDocumentationPage | undefined;

  /** Pages */
  pages?: IDocumentationPage[] | undefined;

  /** Title */
  title: string;

  /** Path */
  path: string;
}

/** SubMenues are the elements in the header that contains all documentation pages. SubMenues should be added to the MainMenu */

export interface ISubMenu extends Entry<ISubMenuFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'subMenu';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ISubsectionFields {
  /** Title */
  title?: string | undefined;

  /** Content */
  content: Document;
}

/** Sub-section, should always be inside a section */

export interface ISubsection extends Entry<ISubsectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'subsection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ISubsubsectionFields {
  /** Title */
  title?: string | undefined;

  /** Content */
  content: Document;
}

/** Sub-sub-section, should always be inside a sub-section */

export interface ISubsubsection extends Entry<ISubsubsectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'subsubsection';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ITabelTestFields {
  /** title */
  title?: string | undefined;

  /** html */
  html?: Document | undefined;
}

export interface ITabelTest extends Entry<ITabelTestFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'tabelTest';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export type CONTENT_TYPE =
  | 'centeredContent'
  | 'documentationPage'
  | 'iconList'
  | 'image'
  | 'internalLink'
  | 'landingPage'
  | 'landingPageWithCards'
  | 'localizationStrings'
  | 'mainMenu'
  | 'overviewCard'
  | 'section'
  | 'subMenu'
  | 'subsection'
  | 'subsubsection'
  | 'tabelTest';

export type LOCALE_CODE = 'en-GB' | 'nb-NO';

export type CONTENTFUL_DEFAULT_LOCALE_CODE = 'en-GB';
