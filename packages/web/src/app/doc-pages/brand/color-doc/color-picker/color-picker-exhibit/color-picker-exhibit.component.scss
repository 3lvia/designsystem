@use '@elvia/elvis/src/utilities/breakpoints.scss' as breakpoints;
@use '../../color-overflow-gradient.scss' as gradient;

$circle-size-desktop: 256px;
$circle-size-tablet: 176px;
$circle-size-min-desktop: 200px;
$circle-size-mobile: 152px;

.color-exhibit {
  p {
    margin: 0;
  }

  &--container {
    display: grid;
    grid-template-columns: auto 1fr;
    grid-template-rows: auto 1fr;
    column-gap: 56px;
    height: 320px;

    @include breakpoints.breakpoint-up(MinDesktop) {
      gap: 32px;
    }

    @include breakpoints.breakpoint-up(Tablet) {
      gap: 24px;
    }

    @include breakpoints.breakpoint-up(Mobile) {
      display: flex;
      flex-direction: column;
      gap: 16px;
      height: 480px;
    }

    .opacity-colors {
      display: flex;
      flex-direction: row;
      list-style-type: none;
      gap: 8px;
      padding: 0;
      margin-block: 14px;

      .color-circle {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 32px;
        height: 32px;
        border-radius: 40px;
        transition: height 200ms ease-in-out;
        cursor: pointer;

        input[type='radio'] {
          position: absolute;
          cursor: pointer;
          margin: 0;
          opacity: 0;
          height: 100%;
          width: 100%;
        }

        &.chosen {
          position: relative;

          .checkmark-left {
            position: absolute;
            top: 14px;
            left: 3px;
            width: 2px;
            height: 8px;
            border-radius: 15px;
            transform: translateX(10px) rotate(-43deg);
            transform-origin: left bottom;
            transition: height 200ms ease-in-out;
          }

          .checkmark-right {
            position: absolute;
            top: 6px;
            left: 2px;
            width: 2px;
            height: 15px;
            border-radius: 15px;
            transform: translateX(10px) rotate(43deg);
            transform-origin: left bottom;
            transition: height 200ms ease-in-out;
          }
        }

        &:hover {
          //height: 100%;
        }
      }
    }

    .circle {
      grid-column: 1;
      grid-row: 1/-1;
      border-radius: 50%;
      flex-shrink: 0;
      height: $circle-size-desktop;
      transition: background-color 250ms linear;
      width: $circle-size-desktop;

      @include breakpoints.breakpoint-up(MinDesktop) {
        height: $circle-size-min-desktop;
        width: $circle-size-min-desktop;
      }

      @include breakpoints.breakpoint-up(Tablet) {
        height: $circle-size-tablet;
        width: $circle-size-tablet;
      }

      @include breakpoints.breakpoint-up(Mobile) {
        align-self: center;
        height: $circle-size-mobile;
        width: $circle-size-mobile;
      }

      &.border {
        border: 1px solid var(--e-color-border-3);
      }

      &.nonexistent {
        animation: spin 210s linear infinite;
        background-color: transparent;
        border: 3px dashed var(--e-color-border-3);

        @keyframes spin {
          from {
            transform: rotate(0deg);
          }
          to {
            transform: rotate(360deg);
          }
        }
      }
    }

    .info {
      align-items: center;
      display: grid;
      gap: 16px;
      grid-auto-rows: 128px; //set height to avoid jumping when tokens are added
      grid-template-columns: auto minmax(0, 1fr);
      grid-template-rows: repeat(4, minmax(min-content, max-content));
      justify-items: start;

      @include breakpoints.breakpoint-up(MinDesktop) {
        column-gap: 8px;
      }

      @include breakpoints.breakpoint-up(Mobile) {
        gap: 16px;
        grid-auto-rows: 48px;
      }

      &.nonexistent {
        gap: 8px;
        grid-template-columns: 1fr;
        grid-template-rows: repeat(3, minmax(min-content, max-content));
        min-height: 294px; //todo: finne fin løsning på dette

        @include breakpoints.breakpoint-up(Mobile) {
          min-height: 238px; //todo: finne fin løsning på dette også
        }
      }

      .title {
        grid-column: 1 / -1;
      }

      .hex,
      .rgb {
        letter-spacing: 0.2px;
      }

      .contrast--heading {
        @include breakpoints.breakpoint-up(Mobile) {
          align-self: start;
          line-height: 22px;
        }
      }

      .contrast--container {
        display: flex;
        gap: 16px;

        @include breakpoints.breakpoint-up(Mobile) {
          flex-direction: column;
          gap: 8px;
        }

        .contrast {
          align-items: center;
          display: flex;
          gap: 8px;

          .contrast--value {
            white-space: nowrap;
          }
        }
      }

      .tokens--heading {
        align-self: start;
        margin: 2px 0 0 0;
      }

      .tokens--container {
        display: flex;
        flex-wrap: wrap;
        align-content: flex-start;
        gap: 8px;
        place-self: stretch;
        max-height: 100%;
        max-width: 100%;
        overflow-y: auto;
        padding-left: 4px;
        margin-left: -4px;

        @include breakpoints.breakpoint-up(Mobile) {
          @include gradient.scroll-gradient;
          flex-direction: row;
          flex-wrap: nowrap;
          max-height: 48px;
          min-height: 48px;
          overflow-x: auto;
        }

        .token {
          font-family: 'Red Hat Mono', monospace;
        }

        .no-tokens {
          flex-shrink: 0;
          margin: 4px 0 0 0;
          overflow: hidden;
        }
      }
    }
  }
}
