// Multiples of 8
$sizes: (
  'xxs': 8px,
  'custom12': 12px,
  'xs': 16px,
  'sm': 24px,
  'md': 32px,
  'lg': 40px,
  'xl': 48px,
  'xxl': 56px,
);

$popover-size: 450px;
$popover-border-width: 1px;
$popover-padding: 24px;
$popover-arrow-size: 12px;
$popover-arrow-size-small: calc(#{$popover-arrow-size} - #{$popover-border-width});
$popover-arrow-offset: 25px; // Midtstilt i forhold til ikon 16X16px (xs)
$popover-button-offset: -30px;

$green: #29d305;

%ewc-popover__widget {
  content: '';
  position: absolute;
  width: 0;
  height: 0;
  bottom: 0;
}
%arrow-after-style {
  z-index: 100;
  transform: rotate(45deg);
  background: white;
}

.ewc-popover {
  display: inline-flex;
  box-sizing: border-box;
  position: relative;
  flex-direction: column;

  &__trigger {
    position: relative;
    display: flex;
    flex-direction: column;
    .ewc-popover__arrow {
      width: 100%;
      display: flex;
      justify-content: center;
      &::before {
        @extend %ewc-popover__widget;
        border: $popover-arrow-size solid;
      }
      &::after {
        @extend %ewc-popover__widget;
        z-index: 100;
        transform: rotate(45deg);
        background: white;
        border: $popover-arrow-size-small solid;
      }

      animation: fadeIn 100ms ease-in;

      @keyframes fadeIn {
        0% {
          opacity: 0;
        }
        100% {
          opacity: 1;
        }
      }
    }
  }

  &__content {
    display: block;
    left: 50%;
    opacity: 1;
    z-index: 99;
    pointer-events: all;
    position: absolute;
    width: $popover-size;
    padding: $popover-padding;
    box-sizing: border-box;
    background-color: white;
    color: black;
    border: 1px solid $green;
    border-radius: 8px;
    text-align: left;
    animation: fadeIn 200ms ease-in;

    @keyframes fadeIn {
      0% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    .ewc-popover__close {
      position: absolute;
      top: 7px;
      right: 7px;
      i {
        // @include icons.icon-size('xs');
      }
    }

    .ewc-popover__title {
      font-family: 'Red Hat Text';
      font-size: 14px;
      line-height: 22px;
      font-weight: 500 !important;
      padding-bottom: 8px;
      margin-right: 16px;
    }
    .ewc-popover__text {
      font-family: 'Red Hat Text';
      font-weight: normal;
      font-size: 14px;
      line-height: 22px;
    }
  }

  .ewc-popover--hide {
    visibility: hidden;
    .ewc-btn .ewc-btn__icon i {
      visibility: hidden;
    }
  }

  // Modifiers for alignment of popover
  // Top aligned (Default)
  &:not(.ewc-popover--bottom) {
    .ewc-popover__content {
      bottom: 100%;
      margin-bottom: 23px;
    }
    .ewc-popover__arrow {
      &::before {
        top: -23px;
        border-color: $green transparent transparent transparent;
      }
      &::after {
        @extend %arrow-after-style;
        top: -39px;
        border-color: white transparent transparent transparent;
      }
    }
  }
  // Bottom aligned
  &.ewc-popover--bottom {
    .ewc-popover__content {
      top: 100%;
      margin-top: 22px;
    }
    .ewc-popover__arrow {
      &::before {
        bottom: -22px;
        border-color: transparent transparent $green transparent;
      }
      &::after {
        bottom: -38px;
        border-color: transparent transparent white transparent;
        @extend %arrow-after-style;
      }
    }
  }
  // Center aligned (Default)
  &:not(.ewc-popover--left):not(.ewc-popover--left-50):not(.ewc-popover--right):not(.ewc-popover--right-50) {
    .ewc-popover__content {
      transform: translateX(-50%);
    }
    .ewc-popover__arrow {
      &::before {
        left: calc(50% - (#{$popover-arrow-offset} / 2));
      }
      &::after {
        left: calc(50% - (#{$popover-arrow-offset} / 2) + 1px);
        @extend %arrow-after-style;
      }
    }
  }
}

// --- ICON BTN ---
.ewc-btn.ewc-btn--icon {
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  border: none;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  border-radius: 50px;
  padding: 8px;
  background: none;
  color: black;

  .ewc-btn__icon {
    width: 24px;
    height: 24px;
    i {
      // @include icons.icon-size('sm');
      display: flex;
      justify-content: center;
      align-items: center;
      visibility: visible;
    }
  }

  &.ewc-btn--lg .ewc-btn__icon {
    width: 32px;
    height: 32px;
    i {
      // @include icons.icon-size('md');
    }
  }
  &.ewc-btn--sm:not(.ewc-btn--circled) .ewc-btn__icon {
    width: 16px;
    height: 16px;
    i {
      // @include icons.icon-size('xs');
    }
  }

  &.ewc-btn--circled {
    padding: 0;

    // Hiding hover ikon
    .ewc-btn__icon i[class*='filled-color'] {
      visibility: hidden;
    }

    &.ewc-btn---hover,
    &:hover:not(:disabled),
    &.ewc-btn---active,
    &:active:not(:disabled) {
      background: transparent;
      // Showing hover ikon
      .ewc-btn__icon i:not([class$='filled-color']),
      .ewc-btn__icon i:not([class$='disabled']) {
        visibility: hidden;
      }
      .ewc-btn__icon i[class*='filled-color'] {
        visibility: visible;
      }
    }
    &.ewc-btn---active,
    &:active:not(:disabled) {
      transform: scale(0.93);
    }
  }

  &.ewc-btn---hover,
  &:hover:not(:disabled),
  &.ewc-btn---active,
  &:active:not(:disabled) {
    background: $green;
    .ewc-btn__icon i[class$='inverted'] {
      visibility: visible;
    }
  }
  &.ewc-btn---active,
  &:active:not(:disabled) {
    transform: scale(0.95);
  }
  &.ewc-btn---focus,
  &:focus:not(:disabled) {
    outline: 2px solid #0064fa;
    outline-offset: 2px;
  }
  &.ewc-btn---disabled,
  &:disabled {
    cursor: not-allowed;
  }
}

// -- OUTLINE --
.e-no-outline {
  outline: none !important;
}

// --- ICONS ---
@function get-icon-size($size) {
  @return map-get($map: $sizes, $key: $size);
}

@mixin icon-size($icon-size) {
  $size: get-icon-size($icon-size);
  width: $size;
  height: $size;
  img,
  i {
    width: $size;
    height: $size;
  }
}

$defaultSize: 'md';

.ewc-icon {
  @include icon-size($defaultSize);
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  display: inline-block;
}

// Making icon size classes
@each $label, $size in $sizes {
  .ewc-icon--#{$label} {
    @include icon-size($label);
  }
}
